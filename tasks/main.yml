---
    - name: Install msmtp
      yum: 
        name: msmtp

    - name: Create msmtp log file (if necessary)
      file:
        path: "{{ msmtp_log_path }}"
        state: touch
        mode: 0666

    - name: Create msmtprc file
      template:
        src: msmtprc.j2
        dest: /etc/msmtprc
        mode: 0644

    - name: Check for existing mailhog ini file
      stat:
          path: "{{ php_mailhog_ini_path }}"
      register: mailhog_ini_stat

    - name: Check for disabled mailhog ini file
      stat:
          path: "{{ php_mailhog_ini_path }}.disabled"
      register: mailhog_ini_disabled_stat

    - name: Check for existing MailHog binary
      stat:
        path: "{{ mailhog_install_path }}{{ mailhog_install_name }}"
      register: mailhog_stat

    - name: Get current MailHog version (if available)
      shell: "{{ mailhog_install_path }}{{ mailhog_install_name }} --version | sed 's/^.* \\(\\([0-9]\\{1,\\}\\.\\)*[0-9]*\\)/\\1/'"
      when: mailhog_stat.stat and mailhog_stat.stat.exists
      register: installed_mailhog_version

    - debug: 
        var: installed_mailhog_version.stdout

    # Install / Update MailHog if necessary
    - name: Download MailHog binary
      get_url:
        url: "{{ mailhog_binary_url }}"
        dest: "{{ mailhog_install_path }}{{ mailhog_install_name }}"
      when:
        - (installed_mailhog_version.skipped is defined and installed_mailhog_version.skipped) or
          mailhog_version is version(installed_mailhog_version.stdout, '>')

    - name: Allow execution of MailHog binary
      file:
        path: "{{ mailhog_install_path }}{{ mailhog_install_name }}"
        mode: 0755
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Generate HTTP password 
      shell: "{{ mailhog_install_path }}{{ mailhog_install_name }} bcrypt {{ mailhog_http_password }}"
      register: mailhog_http_password_hash

    - name: Create password file
      template:
        src: mailhog.password.j2
        dest: /etc/mailhog.password
        mode: 06404

    # Configure MailHog as system service
    - name: Check for MailHog system service
      stat:
        path: /etc/systemd/system/mailhog.service

    - name: Configure MailHog service (Unit)
      ini_file:
        section: Unit
        dest: /etc/systemd/system/mailhog.service
        option: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict:
        Description: MailHog
        After: syslog.target network.target
      when: mailhog_service_stat is undefined or not mailhog_service_stat.stat.exists
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Configure MailHog service (Service)
      ini_file:
        section: Service
        dest: /etc/systemd/system/mailhog.service
        option: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict:
        Type: simple
        ExecStart: "{{ mailhog_install_path }}{{ mailhog_install_name }} -auth-file=/etc/mailhog.password"
        StandardOutput: journal
        Restart: on-failure
      when: mailhog_service_stat is undefined or not mailhog_service_stat.stat.exists
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Configure MailHog service (Install)
      ini_file:
        section: Service
        dest: /etc/systemd/system/mailhog.service
        option: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict:
        WantedBy: multi-user.target
      when: mailhog_service_stat is undefined or not mailhog_service_stat.stat.exists
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Enable MailHog system service
      service:
        name: mailhog
        enabled: yes
        state: started
      ignore_errors: "{{ ansible_check_mode }}"

    # Create the PHP MailHog configuration file if it doesn't exist at all
    - name: Configure mailhog.ini and restart php-fpm
      ini_file:
        section: null
        dest: "{{ php_mailhog_ini_path }}"
        option: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ php_mailhog_ini }}"
      when:
        - mailhog_ini_stat is not defined or not mailhog_ini_stat.stat.exists
      notify:
          - restart php-fpm
